export const items = [
  { "client-id": "proximy", client: "Proximy", "tech": ["Flutter", "Google Cloud Functions"], "description": "Built many cross-platform mobile app features.", "tags": ["mobile dev", "serverless"], "dates": "May 2021 - December 2021" },
  { "client-id": "proximy", client: "Proximy", "tech": ["Cloud Firestore"], "description": "Secured Cloud Firestore database by writing security rules.", "tags": ["security", "NoSQL"], "dates": "June 2021" },
  { "client-id": "midstride", client: "Midstride Technologies", "tech": ["PHP", "Laravel", "MySQL", "Vue", "JS", "SASS", "Bootstrap", "Docker"], "description": "Currently building many full-stack features (167 Pull Requests merged to date).", "tags": ["full-stack web dev"], "dates": "Jan 2022 - Ongoing" },
  { "client-id": "midstride", client: "Midstride Technologies", "tech": ["PHP", "Laravel"], "description": "Built a system which reads email <code>blade</code> files from the codebase and renders them with data chosen dynamically by the user, allowing admin to preview emails being sent to customers.", "tags": ["full-stack web dev"], "dates": "Jan 2022 - Ongoing" },
  { "client-id": "midstride", client: "Midstride Technologies", "tech": ["PHP", "Laravel", "MySQL"], "description": "Took full ownership of the design and implementation of a system allowing to differentiate various backend objects by a parent category, and to take different actions based on the objects' parent category. Among the different actions, we buit support for sending emails from a different email address and domain depending on customer attributes. This was technically challenging because it involves updating Laravel's <code>MailgunTransport</code>'s config at runtime, which requires creating a new instance of <code>MailgunTransport</code> and binding it into the service container.", "tags": ["full-stack web dev"], "dates": "Jan 2022 - Ongoing" },
  { "client-id": "midstride", client: "Midstride Technologies", "tech": ["GitHub Actions", "Prettier"], "description": "Currently building and maintaining a CI/CD pipeline allowing to automatically test and lint code before any PR gets merged. say CI/CD sped up (cache etc) ", "tags": ["devops", "CI/CD", "automation"], "dates": "February 2022 - Ongoing" },
  { "client-id": "midstride", client: "Midstride Technologies", "tech": ["GitHub Actions", "AWS IAM", "AWS S3"], "description": "Built a CI/CD pipeline which periodically backs up git repo to S3, always maintaining the latest two backup versions in S3 bucket.", "tags": ["devops", "CI/CD", "automation"], "dates": "February 2022 - Ongoing" },
  { "client-id": "midstride", client: "Midstride Technologies", "tech": ["PHP", "Laravel", "MySQL", "Vue", "JS"], "description": "Identified and fixed a stored XSS vulnerability.", "tags": ["security", "full-stack web dev"], "dates": "August 2022" },
  { "client-id": "midstride", client: "Midstride Technologies", "tech": ["Bash"], "description": "Wrote a script to facilitate the detection of broken links in hundreds of blog articles, avoiding many hours of manual checking.", "tags": ["automation"], "dates": "September 2022" },
  { "client-id": "midstride", client: "Midstride Technologies", "tech": ["Markdown"], "description": "As we onboarded onto Midstride's projects, we improved their internal documentation to help future developers get set up faster.", "tags": ["documentation"], "dates": "January 2022" },
  { "client-id": "midstride", client: "Midstride Technologies", "tech": ["Markdown"], "description": "All the Quill stuff (CTA button, Reference table, rich images with caption, product ads, table, format in collapsible content, fixing some bugs where things would not persist", "tags": ["documentation"], "dates": "January 2022" },
  { "client-id": "midstride", client: "Midstride Technologies", "tech": ["Laravel", "Eloquent"], "description": "Fixed many issues with complex Eloquent queries.", "tags": ["documentation"], "dates": "January 2022" },
  { "client-id": "midstride", client: "Midstride Technologies", "tech": ["Laravel", "Eloquent"], "description": "Took full owernship of CC and BTC flag (communication with Tara) and implementation", "tags": ["documentation"], "dates": "January 2022" },
  { "client-id": "midstride", client: "Midstride Technologies", "tech": ["Laravel", "Eloquent"], "description": "Implemented ", "tags": ["documentation"], "dates": "January 2022" },
  { "client-id": "midstride", client: "Midstride Technologies", "tech": ["Laravel", "Eloquent"], "description": "Took full owernship of a messaging system (talking with Tara)", "tags": ["documentation"], "dates": "January 2022" },
  { "client-id": "midstride", client: "Midstride Technologies", "tech": ["Laravel", "Eloquent"], "description": "Took full owernship of the design and implementation of a system allowing to text the user something different based on which page in the website they were on when they added a new credit card.", "tags": ["documentation"], "dates": "January 2022" },
  { "client-id": "midstride", client: "Midstride Technologies", "tech": ["Laravel", "Eloquent"], "description": "Took full owernship of the design and implementation of a system allowing to group repeat dates.", "tags": ["documentation"], "dates": "January 2022" },
  { "client-id": "midstride", client: "Midstride Technologies", "tech": ["Laravel", "Eloquent"], "description": "Took full owernship of the design and implementation of a system allowing to export an excel file showing a report of users with .", "tags": ["documentation"], "dates": "January 2022" },
  { "client-id": "midstride", client: "Midstride Technologies", "tech": ["Laravel", "Eloquent"], "description": "Implemented OTP login.", "tags": ["documentation"], "dates": "January 2022" },
  { "client-id": "midstride", client: "Midstride Technologies", "tech": ["Laravel", "Eloquent"], "description": "Implemented a system to manage failed Laravel queued jobs", "tags": ["documentation"], "dates": "January 2022" },
  { "client-id": "midstride", client: "Midstride Technologies", "tech": ["Laravel", "Eloquent"], "description": "Implemented a system which uses the Mailgun API to list failed emails", "tags": ["documentation"], "dates": "January 2022" },
  { "client-id": "midstride", client: "Midstride Technologies", "tech": ["Laravel", "Eloquent"], "description": "Build systems to allow admins to manage users' subscription status to mailgun and mailchimp", "tags": ["documentation"], "dates": "January 2022" },
  { "client-id": "midstride", client: "Midstride Technologies", "tech": ["Laravel", "Eloquent"], "description": "Implemented a system which allowed to automatically redirect blog URLs containing uppercase letters to their full lowercase versions. This was challenging because the determining factor in whether or not a given URL had to be redirected was whether its route name, not the URL itself, contained a specific string. Thus, we had to add a catch-all route with a middleware and have the middleware compute the route name for the all-lowercase equivalent of the URL, and then redirect the URL if its route matches the condition.", "tags": ["documentation"], "dates": "January 2022" },
  { "client-id": "midstride", client: "Midstride Technologies", "tech": ["Laravel", "Eloquent"], "description": "", "tags": ["documentation"], "dates": "January 2022" },
  { "client-id": "midstride", client: "Midstride Technologies", "tech": ["Laravel", "Eloquent"], "description": "Added support for upload of HEIC images. Since the libraries we used didn't support this out of the box, we had to convert the image to JPG before storing it.", "tags": ["documentation"], "dates": "January 2022" },
  { "client-id": "midstride", client: "Midstride Technologies", "tech": ["Laravel", "Eloquent"], "description": "Fixed npm dependency issue affecting admin-facing tools. This involed updating a faulty package and doing the necessary updates in the code to match the new version's syntax and usage.", "tags": ["documentation"], "dates": "January 2022" },
  { "client-id": "midstride", client: "Midstride Technologies", "tech": ["Laravel", "Eloquent"], "description": "Wrote documentation to help the rest of the team get set up with Xdebug step debugging on VSCode + Docker. This is challenging because it involves publishing the docker files and doing quite a big of config.", "tags": ["documentation"], "dates": "January 2022" },
  { "client-id": "midstride", client: "Midstride Technologies", "tech": ["Laravel", "Eloquent"], "description": "Setup hard stacks", "tags": ["documentation"], "dates": "January 2022" },
  { "client-id": "internal", client: "Internal Project", "tech": ["React", "CSS", "Bootstrap", "DNS Configuration", "GitHub Pages"], "description": "Currently building this website!", "tags": ["full-stack web dev"], "dates": "May 2021 - Ongoing" },
  { "client-id": "minebright", client: "Minebright", "description": "As a result of their ongoing partnership with North P&D, Minebright is able to immediately obtain, without prior notice nor any minimum commitment, help with quality assurance from one of our team members in support of their software development team.", "tags": ["quality assurance"], "dates": "May 2021 - Ongoing" },
  { "client-id": "tension", client: "Tension", "description": "We built <a href='https://rockmass.webflow.io' target='_blank' rel='noopener noreferrer'>rockmass.webflow.io</a> for Tension based on their design.", "tags": ["frontend web dev"], "dates": "May 2021 - Ongoing" }
]

export const tagColors = { "security": "red", "full-stack web dev": "darkorange", "mobile dev": "blue", "devops": "black", "CI/CD": "green", "automation": "deeppink", "serverless": "grey", "NoSQL": "lightblue", "quality assurance": "purple" }
